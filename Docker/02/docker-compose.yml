name: python-stack
services:

  web-nginx:
    image: nginx:latest 
    container_name: python-nginx
    ports:
      - "80:80"  # NGINX listens on port 8080 of the host
    depends_on:
      app-python:
          condition: service_healthy
          restart: true   
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Custom NGINX configuration
    networks:
      - frontend  
    healthcheck:
      #test: ["CMD", "curl", "-f", "localhost:80/nginx-health"]
      test: ["CMD-SHELL", "sh", "nginx_health_check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  app-python:
    image: imageof-vaheeddockerhub/new-python-img-devops-techstack-image
    container_name: app-python
    #command: sh -c "sleep 5 && apt-get update && apt-get install curl -y && sleep 5000"
    ports:
      - "5000"
    depends_on:
      db-mysql:
        condition: service_healthy
        restart: true   
    environment:
      - MYSQL_HOST=db-mysql
      - MYSQL_USER=flaskuser
      - MYSQL_PASSWORD=my-secret-pw
      - MYSQL_DB=flaskapp 
    networks:
      - frontend
      - backend
    healthcheck:
     #test: ["CMD", "netstat", "-tulnp", "|", "grep", ":5000"]
      test: ["CMD-SHELL", "sh", "app_health_check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
  
  db-mysql:
    container_name: mysqldb-python
    image: image-of-vaheeddockerhub/new-mysql-python-img-devops-techstack-image
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
    # ports:
    #   - "3306:3306"
    volumes:
      - mydb:/var/lib/mysql
    networks:
      - backend   
    healthcheck:
      #test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pdbpassword11"] # not that much reliable, gives flase positives
      #test: ["CMD-SHELL", "exit | mysql -h localhost -P 3306 -u root -p$$MYSQL_ROOT_PASSWORD" ]  # working perfectly
      test: ["CMD-SHELL", "sh", "mysql_health_check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s     

volumes:
  mydb:

networks:
  frontend:
  backend:

###############################   Named Volumes ######################################################
 # volumes:
 # mydb:
 #   name: ums-mysqldb-data-v1  # Explicitly name the volume
 #   driver: local  # Optional, as local is the default driver
 #   labels:
 #     project: "ums-stack"           # Label to indicate the project name
 #     component: "mysql-database"    # Label to specify that this volume is for the MySQL database
 #     purpose: "persistent-storage"  # Label to indicate the purpose of this volume
#################################   Named Volumes #####################################################
