name: product-stack
services:

  web-nginx:
    image: nginx:1.27.4
    container_name: product-nginx
    ports:
      - "80:80"  # NGINX listens on port 8080 of the host
    depends_on:
      app-product:
          condition: service_healthy
          restart: true   
    volumes:
      - ./product.conf:/etc/nginx/conf.d/product.conf:ro
    # - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Custom NGINX configuration
    networks:
      - frontend  
    healthcheck:
      #test: ["CMD", "curl", "-f", "localhost:80/nginx-health"]
      test: ["CMD-SHELL", "sh", "nginx_health_check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  app-product:
    image: product-img
    container_name: app-product-cont
    #command: sh -c "sleep 5 && apt-get update && apt-get install curl -y && sleep 5000"
    build: 
      context: ./product-manager
      dockerfile: Dockerfile-product
    ports:
      - "8080"
    depends_on:
      db-mysql:
        condition: service_healthy
        restart: true   
    environment:
      - DB_HOST=db-mysql
      - DB_USERNAME=product
      - DB_PASSWORD=product
      - DB_NAME=product
    networks:
      - frontend
      - backend
    healthcheck:
     #test: ["CMD", "netstat", "-tulnp", "|", "grep", ":5000"]
      test: ["CMD-SHELL", "sh", "app_health_check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
  
  db-mysql:
    container_name: mysqldb-sbms
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: product
      MYSQL_PASSWORD: product
      MYSQL_DATABASE: product
    # ports:
    #   - "3306:3306"
    volumes:
      - mydb:/var/lib/mysql
      - ./product-manager/scripts/product.sql:/docker-entrypoint-initdb.d/product.sql
    networks:
      - backend   
    healthcheck:
      #test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pdbpassword11"] # not that much reliable, gives flase positives
      #test: ["CMD-SHELL", "exit | mysql -h localhost -P 3306 -u root -p$$MYSQL_ROOT_PASSWORD" ]  # working perfectly
      test: ["CMD-SHELL", "sh", "mysql_health_check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s     

volumes:
  mydb:
    name: product-mysqldb-data-v1  # Explicitly name the volume
    driver: local  # Optional, as local is the default driver
    labels:
      project: "product-stack"           # Label to indicate the project name
      component: "mysql-database"    # Label to specify that this volume is for the MySQL database
      purpose: "persistent-storage"  # Label to indicate the purpose of this volume

networks:
  frontend:
  backend:
