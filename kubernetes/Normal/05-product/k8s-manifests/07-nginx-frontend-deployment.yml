apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-frontend
  labels:
    app: product-frontend
    tier: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-frontend
      tier: frontend
  template:
    metadata:
      labels:
        app: product-frontend
        tier: frontend
    spec:

      volumes:
      - name: product-nginx-reverse-proxy
        configMap:
          name: product-nginx-reverse-proxy

      initContainers:
      - name: check-nginx-ready
        image: busybox:1.31
        command: ['sh', '-c', 'echo -e "Checking for the availability of Backend Server deployment"; until nc -z product-backend 8080; do sleep 1; printf "-"; done; echo -e "  >> Backend Server has been started";']

      containers:
      - name: product-frontend-cont
        image: nginx:1.27.4
        ports:
        - name: frontend
          containerPort: 80
        volumeMounts:
        - name: product-nginx-reverse-proxy
          mountPath: /etc/nginx/conf.d/

        startupProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 6

        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3

        livenessProbe:
          httpGet:
            path: /nginx-health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
          
---
apiVersion: v1
kind: Service
metadata:
  name: product-frontend
  labels:
    app: product-frontend
    tier: frontend
spec:
  type: NodePort
  selector:
    app: product-frontend
    tier: frontend
  ports:
  - name: frontend
    protocol: "TCP"
    port: 80
    targetPort: 80
    nodePort: 32127
